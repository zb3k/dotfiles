[private]
modules-left = cpu memory

[colors]
; black        = #282c34   
; white        = #abb2bf
transparent = #00000000
black        = #282c34
white        = #abb2bf
light-red    = #e06c75
dark-red     = #be5046  
green        = #98c379
light-yellow = #e5c07b
dark-yellow  = #d19a66
blue         = #61afef 
magenta      = #c678dd
cyan         = #56b6c2 
gutter-grey  = #4b5263   
comment-grey = #5c6370  


background = ${colors.black}
foreground = ${colors.white}
accent = ${colors.comment-grey}
muted = ${colors.comment-grey}

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; @deprecated The setting is ignored since 3.5.0
; Time in milliseconds that the input handler will wait between processing events
; throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
format-foreground = 
format-background = 
format-underline =
format-overline =
format-spacing =
format-padding =
format-margin =
format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = false

[global/wm]
margin-top = 0
margin-bottom = 0

; -----------------------------------------------------------------------------
; BAR: TOP
; -----------------------------------------------------------------------------
[bar/top]
; Use either of the following command to list available outputs:
; $ polybar -M | cut -d ':' -f 133FFFFFF
; If no monitor is given, the primary monitor is used if it exists
; monitor = ${env:MONITOR:monitor-fallback}

; Use the specified monitor as a fallback if the main one is not found.
; monitor-fallback = VGA-1

; Require the monitor to be in connected state
; monitor-strict = false
; Use fuzzy matching for monitors (only ignores dashes -)
; Useful when monitors are named differently with different drivers.
; monitor-exact = true

; Tell the Window Manager not to configure the window.
; Use this to detach the bar if your WM is locking its size/position.
; Note: With this most WMs will no longer reserve space for 
; the bar and it will overlap other windows. You need to configure
; your WM to add a gap where the bar will be placed.
override-redirect = true

; Put the bar at the bottom of the screen
bottom = false

; Prefer fixed center position for the `modules-center` block. 
; The center block will stay in the middle of the bar whenever
; possible. It can still be pushed around if other blocks need
; more space.
; When false, the center block is centered in the space between 
; the left and right block.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width = 100%
height = 30

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction 
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; Background ARGB color (e.g. #f00, #ff992a, #ddff1023)
background = #AA1e2026

; Foreground ARGB color (e.g. #f00, #ff992a, #ddff1023)
foreground = ${colors.foreground}

; Background gradient (vertical steps)
;   background-[0-9]+ = #aarrggbb
; background-0 = 

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded. For this to work you may also need to enable 
; pseudo-transparency or use a compositor like picom.
; Individual values can be defined using:
;   radius-{top,bottom}
; or
;   radius-{top,bottom}-{left,right} (unreleased)
; Polybar always uses the most specific radius definition for each corner.
radius = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 1
line-color = #f00

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size can be defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in 50% minus 10 pixels. The percentage is relative
; to the monitor width or height depending on the border direction. 
border-size = 0
border-color = #00000000

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 3

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 2

; Fonts are defined using <font-name>;<vertical-offset>
; Font names are specified using a fontconfig pattern.
;   font-0 = NotoSans-Regular:size=8;2
;   font-1 = MaterialIcons:size=10
;   font-2 = Termsynu:size=8;-1
;   font-3 = FontAwesome:size=10
; See the Fonts wiki page for more details
font-0 = "Clear Sans:style=Bold:size=12:antialias=true;2"
font-1 = "Font Awesome 5 Free:style=Solid:pixelsize=14;2"
font-2 = "Hack Nerd Font Mono:style=Solid:pixelsize=22;4"

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
; modules-left = _ipc_interval cpu cpu-temp memory fs xprop screenshot

modules-left = cpu memory fs ${private.modules-left}
modules-center = bspwm
; modules-right = updates weather volume xkeyboard date
modules-right = xkeyboard date

; The separator will be inserted between the output of each module
; This has the same properties as a label
separator =

; This value is used to add extra spacing between elements
; @deprecated: This parameter will be removed in an upcoming version
spacing = 0

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
; locale = ru_RU.UTF-8

; Position of the system tray window
; If empty or undefined, tray support will be disabled
; NOTE: A center aligned tray will cover center aligned modules
;
; Available positions:
;   left
;   center
;   right
;   none
tray-position = none

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 20

; DEPRECATED! Since 3.3.0 the tray always uses pseudo-transparency
; Enable pseudo transparency
; Will automatically be enabled if a fully transparent
; background color is defined using `tray-background`
; tray-transparent = true

; Background color for the tray container 
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
tray-background = ${color.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 0

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
wm-restack = bspwm

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi = 
; dpi-x = 96
; dpi-y = 96

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

; Fallback click handlers that will be called if
; there's no matching module handler found.
; click-left = 
; click-middle = 
; click-right =
scroll-up = bspc desktop -f prev.local
scroll-down = bspc desktop -f next.local
; double-click-left =
; double-click-middle =
; double-click-right =

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
cursor-click = pointer
cursor-scroll = ns-resize


[module/volume]
type = internal/pulseaudio

; Sink to be used, if it exists (find using `pacmd list-sinks`, name field)
; If not, uses default sink
sink = alsa_output.pci-0000_12_00.3.analog-stereo

; Use PA_VOLUME_UI_MAX (~153%) if true, or PA_VOLUME_NORM (100%) if false
; Default: true
use-ui-max = true

; Interval for volume increase/decrease (in percent points)
; Default: 5
interval = 5

; Available tags:
;   <label-volume> (default)
;   <ramp-volume>
;   <bar-volume>
format-volume = <ramp-volume> <label-volume>

; Available tags:
;   <label-muted> (default)
;   <ramp-volume>
;   <bar-volume>
format-muted = <label-muted>

; Available tokens:
;   %percentage% (default)
;   %decibels%
label-volume = %percentage%%

format-volume-foreground = ${colors.accent}
label-volume-foreground = ${colors.foreground}
format-muted-foreground = ${colors.dark-red}
label-muted-foreground = #666

; Available tokens:
;   %percentage% (default)
;   %decibels%
label-muted = " "

format-muted-prefix = ""

; Only applies if <ramp-volume> is used
ramp-volume-0 = 
ramp-volume-1 = 
ramp-volume-2 = 

; Right and Middle click
click-right = pavucontrol
; click-middle = 


; bar-volume-width = 1
; bar-volume-foreground-0 = #5af78e
; bar-volume-foreground-1 = #5af78e
; bar-volume-foreground-2 = #5af78e
; bar-volume-foreground-3 = #5af78e
; bar-volume-foreground-4 = #5af78e
; bar-volume-foreground-5 = #f3f99d
; bar-volume-foreground-6 = #ff5c57
; bar-volume-gradient = false
; bar-volume-indicator = 
; bar-volume-indicator-font = 1
; bar-volume-indicator-foreground = #ff
; bar-volume-fill = ─
; bar-volume-fill-font = 1
; bar-volume-empty = ─
; bar-volume-empty-font = 1
; bar-volume-empty-foreground = ${colors.accent}


[module/xprop]
type = custom/ipc
hook-0 = echo " "
hook-1 = sleep 0.1 && xprop | grep WM_CLASS
hook-2 = whoami
initial = 1
click-left = polybar-msg hook xprop 2
click-right = polybar-msg hook xprop 1

format-prefix = "ﳛ "
format-foreground = ${colors.foreground}
format-prefix-foreground = ${colors.accent}

[module/screenshot]
type = custom/script
exec = echo ""
format-foreground = ${colors.accent}
click-left = ksnip -r
click-right = killall ksnip

[module/app]
type = custom/text
content = 
content-font = 3
content-foreground = ${colors.blue}
; content-background = ${colors.muted}
content-padding = 0
click-left = rofi -modi run,drun -show drun -location 1 -xoffset 15 -yoffset 39 -line-padding 4 -columns 1 -width 25 -lines 10 -padding 15 -hide-scrollbar -show-icons -drun-icon-theme

[module/memory]
type = internal/memory
interval = 2
format-prefix = "  "
format-prefix-foreground = ${colors.accent}
label = %percentage_used% %

[module/weather]
type = custom/script
format-prefix = " "
format-prefix-foreground = ${colors.accent}
label-foreground = ${colors.foreground}
exec = ~/.config/polybar/scripts/weather.sh
interval = 600
label-font = 7

[module/title]
type = internal/xwindow
format-padding = 0
label = "%title:0:25:...%"
label-maxlen = 25

[module/bspwm]
type = internal/bspwm

; ICON VARIANT
; format-font = 3
; label = %icon%
; label-padding = 1

; LABEL VARIANT
label = %name%
label-padding = 3


; Use fuzzy (partial) matching on labels when assigning 
; icons to workspaces
; Example: code;♚ will apply the icon to all workspaces 
; containing 'code' in the label
; Default: false
fuzzy-match = true

ws-icon-0 = TERM;
ws-icon-1 = CODE;
ws-icon-2 = WEB;
ws-icon-3 = SRV;
ws-icon-4 = NOTE;
ws-icon-5 = CHAT;
ws-icon-6 = MAIL;
ws-icon-7 = TLS;
; ws-icon-8 = ZEN;

ws-icon-default = 

; The following labels will be used to indicate the layout/mode
; for the focused workspace. Requires <label-mode>
;
; Available tokens:
;   None
; label-monocle = 
; label-tiled = 侀
; label-fullscreen = 类
; label-floating = 恵
; label-pseudotiled = P
; label-locked = 
; label-locked-foreground = #bd2c40
; label-sticky = 
; label-sticky-foreground = #fba922
; label-private = 
; label-private-foreground = #bd2c40
; label-marked = M

; Separator in between workspaces
; label-separator = |
; label-separator-padding = 2
; label-separator-foreground = #ffb52a

index-sort = true
wrapping-scroll = false
format = <label-state>
label-focused = ${module/bspwm.label}
label-focused-background = ${colors.muted}
label-focused-foreground = ${colors.foreground}
label-focused-padding = ${module/bspwm.label-padding}
label-occupied = ${module/bspwm.label}
label-occupied-foreground = ${colors.foreground}
label-occupied-padding = ${module/bspwm.label-padding}
label-urgent = ${module/bspwm.label}
label-urgent-foreground = ${colors.dark-red}
label-urgent-padding = ${module/bspwm.label-padding}
label-empty = ${module/bspwm.label}
label-empty-foreground = ${colors.muted}
label-empty-padding = ${module/bspwm.label-padding}


[module/fs]
type = internal/fs
mount-0 = /
interval = 10
fixed-values = true
spacing = 1
format-mounted = <label-mounted>
format-mounted-prefix = 
format-mounted-padding = 1
format-mounted-prefix-foreground = ${colors.accent}
format-unmounted = <label-unmounted>
format-unmounted-prefix = 
format-unmounted-padding = 1
; format-unmounted-prefix-foreground = ${colors.suffix}
label-mounted = " %free%"
label-unmounted = %mountpoint%: not mounted
label-unmounted-foreground = ${colors.foreground}

[module/date]
type = internal/date
interval = 1
date-alt = "%e %B %Y,"
time = "%H:%M"
time-alt = "%H:%M:%S"
format-prefix = " "
format-prefix-foreground = ${colors.accent}
label =%{A3:gsimplecal & disown:}%date% %time%%{A} %{A}
label-foreground = ${colors.foreground}
format-padding = 0

[module/xkeyboard]

type = internal/xkeyboard
; blacklist-0 = num lock
; blacklist-1 = caps lock
; format-prefix = ""
; format-prefix-foreground = ${colors.accent}
format-padding = 0
layout-icon-0 = us;%{F#5c6370}%{F-} EN
layout-icon-1 = ru;%{F#be5046}%{F-} RU

; label-layout-background = #bc99ed
; layout-foreground-1 = #F00
label-layout = %icon%
format = <label-layout> <label-indicator>
; label-indicator-on-capslock = xxxx
; label-indicator-off-capslock = AAA

[module/power]
type = custom/text
content = 襤
content-font=3
content-foreground = ${colors.accent}
; content-background = ${colors.muted}
content-padding = 0
click-left = ~/.config/rofi/rofi-powermenu.sh

[module/updates]
type = custom/script
exec = ~/.config/polybar/scripts/updates.sh
format = <label>
format-prefix = 
format-prefix-foreground = ${colors.accent}
label = %output%
label-padding = 1
label-font = 1
format-foreground = ${colors.foreground}
interval = 21600
label-foreground = ${colors.foreground}
cursor-click = pointer
click-left = notify-send "$(checkupdates)"

[module/cpu]
type = internal/cpu
interval = 2
format-prefix = "  "
format-prefix-foreground = ${colors.accent}
label = %percentage%%

[module/cpu-temp]
type = custom/script
exec = ~/.config/polybar/scripts/cpu_temp.sh
format = <label>
format-prefix = " "
format-prefix-foreground = ${colors.accent}
label = %output%°
; label-padding = 1
label-font = 1
format-foreground = ${colors.foreground}
interval = 5
label-foreground = ${colors.foreground}

; cursor-click = pointer
; click-left = notify-send "$(checkupdates)"

; [module/liquidctl]
; show-click-output = true
; type = custom/script
; exec = ~/.config/polybar/scripts/liquidctl.sh 1
; format = <label>
; format-prefix = " "
; format-prefix-foreground = ${colors.accent}
; label = %output%
; ; label-padding = 1
; label-font = 1
; format-foreground = ${colors.foreground}
; interval = 5
; label-foreground = ${colors.foreground}

; click-left = ~/.config/polybar/scripts/liquidctl.sh 1 10

; type = custom/ipc
; ; Hook to execute on launch. The index is 1-based and using
; ; the example below (2) `whoami` would be executed on launch.
; ; If 0 is specified, no hook is run on launch
; ; Default: 0
; hook-0 = ~/.config/polybar/scripts/liquidctl.sh

; hook-1 = sleep 0.1 && xprop | grep WM_CLASS
; hook-2 = whoami
; initial = 1
; click-left = polybar-msg hook xprop 2
; click-right = polybar-msg hook xprop 1



; interval = 1


[module/liquidctl]
type = custom/ipc

format-prefix = " "
format-foreground = ${colors.foreground}
format-prefix-foreground = ${colors.accent}

initial = 2

hook-0 = ~/.config/polybar/scripts/liquidctl.sh duty
hook-1 =  ~/.config/polybar/scripts/liquidctl.sh speed

scroll-up = ~/.config/polybar/scripts/liquidctl.sh increment
scroll-down = ~/.config/polybar/scripts/liquidctl.sh decrement

click-left = polybar-msg hook liquidctl 1
click-right = polybar-msg hook liquidctl 2

[module/_ipc_interval]
type = custom/script
exec = polybar-msg hook liquidctl 2
interval = 5000
label =